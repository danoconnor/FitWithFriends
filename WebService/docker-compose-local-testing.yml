version: '3.8'
services:

  node-app:
    build:
      context: ./FitWithFriends
    ports:
      - '3000:3000'
      - '9229:9229'
    environment:
      - PGHOST=postgres
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - PGUSESSL=0
      - FWF_AUTH_USE_LOCAL_KEYPAIR=1
      - FWF_ADMIN_AUTH_SECRET=${ADMIN_AUTH_SECRET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 60s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    ports:
      - '${PGPORT}:${PGPORT}'
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_PORT: ${PGPORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./CreateDatabaseTables.sql:/docker-entrypoint-initdb.d/1_CreateDatabaseTables.sql
      - ./SetupTestData.sql:/docker-entrypoint-initdb.d/2_SetupTestData.sql
